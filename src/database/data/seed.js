const { sequelize } = require('../config');
const Topic = require('../models/Topic');
const Question = require('../models/Question');

async function seedDatabase()
{
    try
    {
        console.log('๐ฑ Starting seed process...');

        await sequelize.sync({ force: false });
        console.log('โ Database synced.');

        const topics = [
            { name: 'javascript', description: 'ุฃุณุฆูุฉ ุนู ูุบุฉ JavaScript' },
            { name: 'csharp', description: 'ุฃุณุฆูุฉ ุนู ูุบุฉ C#' },
            { name: 'python', description: 'ุฃุณุฆูุฉ ุนู ูุบุฉ Python' },
            { name: 'cpp', description: 'ุฃุณุฆูุฉ ุนู ูุบุฉ C++' },

        ];

        const createdTopics = await Topic.bulkCreate(topics, { ignoreDuplicates: true });
        console.log('โ Topics seeded.');

        const questions = [
            //python 
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุฅูุดุงุก ูุงุฆูุฉ ูุงุฑุบุฉ ูู Pythonุ', options: ['[]', 'list()', 'emptyList()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ุงูุชุญูู ุงูุดุฑุทูุฉ ูู Pythonุ', options: ['if', 'then', 'control()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุนูู ูุน ุงูุณูุงุณู ุงููุตูุฉุ', options: ['re', 'regex()', 'stringOps'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุนุฏ ุงูุนูุงุตุฑ ูู ุงูููุงุฆูุ', options: ['len()', 'count()', 'size()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุฅุถุงูุฉ ุนูุตุฑ ูู ููุงูุฉ ุงูููุงุฆูุ', options: ['append()', 'add()', 'push()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุนูุณ ุชุฑุชูุจ ุงูููุงุฆูุ', options: ['reversed()', 'reverse()', 'invert()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุชุญููู ุงูุจูุงูุงุชุ', options: ['pandas', 'dataAnalysis()', 'stats()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ุงูุชุนุงูู ูุน ุงููููุงุช ูู Pythonุ', options: ['open()', 'fileOps', 'read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุชุญููู ุงูุณูุงุณู ุงููุตูุฉ ุฅูู ูุงุฆูุงุชุ', options: ['eval()', 'parse()', 'toObject()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงููุตูู ุฅูู ุงูุนูุงุตุฑ ูู ุงูููุงุฆูุ', options: ['list[index]', 'access()', 'get()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุจุญุซ ูู ุงูููุงููุณุ', options: ['dict.get()', 'find()', 'lookup()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุญุณุงุจุงุช ุงูุฌุจุฑูุฉุ', options: ['math', 'algebra()', 'calc()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชุดุบูู ุงูุญููุงุช (loops) ูู Pythonุ', options: ['for', 'loop()', 'repeat()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ููุงุฑูุฉ ุงูุตูุฑ ูู Pythonุ', options: ['is zero()', '==', 'compare()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุฅุฏุฎุงู ุงูุจูุงูุงุช ูู ุงููุณุชุฎุฏูุ', options: ['input()', 'userInput()', 'read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ูุฑุงุกุฉ ุงูุณูุงุณู ุงููุตูุฉ ูู Pythonุ', options: ['str()', 'read()', 'input()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุชุฌููุน ุงูุนูุงุตุฑ ุงููุชูุฑุฑุฉ ูู ุงูููุงุฆูุ', options: ['set()', 'unique()', 'distinct()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ุนูู ุงูุฃุนุฏุงุฏ ุงูุตุญูุญุฉุ', options: ['math', 'integer()', 'calc()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุฅูุดุงุก ุงูููุงุฆู ูู ุงูููุงููุณุ', options: ['dict.items()', 'list()', 'convert()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุชุญูู ูู ุชุณุงูู ุงูุณูุงุณู ุงููุตูุฉ ูู Pythonุ', options: ['==', 'equals()', 'compare()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุฅูุดุงุก ููุงุฆู ุฌุฏูุฏุฉ ูู ุงูููุงุฆูุ', options: ['copy()', 'duplicate()', 'clone()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ุงูุชุญูู ูู ุงูุญููุงุช (loops) ูู Pythonุ', options: ['while', 'loop()', 'repeat()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชูููุฏ ุฃุฑูุงู ุนุดูุงุฆูุฉ ูู Pythonุ', options: ['random()', 'rand()', 'randgen()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุชุงุฑูุฎ ูุงูููุชุ', options: ['datetime', 'Time', 'dateTime'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุงุฆูุฉ ูู Pythonุ', options: ['list', 'createList', 'makeList'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุญุณุงุจุงุช ุฑูุงุถูุฉ ูุนูุฏุฉุ', options: ['math', 'calc', 'complexMath'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุฌููุนุฉ ุฌุฏูุฏุฉ ูู Pythonุ', options: ['set()', 'newSet()', 'makeSet()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงููุฏุฎูุงุช/ุงููุฎุฑุฌุงุช (I/O)ุ', options: ['sys', 'io', 'inputOutput'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ูู Pythonุ', options: ['try/except', 'errorHandle()', 'exception()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ูู Pythonุ', options: ['def', 'function', 'createFunc'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงูุฐุงูุฑุฉ ูู Pythonุ', options: ['gc.collect()', 'clean()', 'clearMemory()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชููุฑ ุทุฑููุง ูุฅุฏุงุฑุฉ ุงูููุงุฆูุ', options: ['list', 'array', 'collections'], correct: 2, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุณูุงุณู ูุนุงูุฌุฉ ุงูุจูุงูุงุช ูู Pythonุ', options: ['map()', 'process()', 'loop()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุฑุณุงุฆู ุจุฑูุฌูุฉุ', options: ['logging', 'log', 'message'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุฌูุน ูู Pythonุ', options: ['sum()', 'add()', 'plus()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุฑุงุซุฉ ูู Pythonุ', options: ['inherit', 'class', 'extends'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ูููุงุช CSVุ', options: ['csv', 'FileHandling', 'dataFile'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงูุงุชุตุงู ุจุดุจูุฉ ูู Pythonุ', options: ['socket()', 'connect()', 'network()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุฃุฎุทุงุกุ', options: ['sys', 'exceptions', 'error'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงูุฏูุงู ูุน ุงููุนููุงุช ูู Pythonุ', options: ['def', 'parameters()', 'arguments()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชููุฑ ุทุฑููุฉ ูุฅุฌุฑุงุก ูุนุงูุฌุฉ ุงูุฑุณููุ', options: ['PIL', 'ImageProcessing', 'images'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ูุฆุงุช ูุชุนุฏุฏุฉ ูู Pythonุ', options: ['inherit', 'class', 'extend'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชููุฑ ุทุฑููุง ูุฅุฏุงุฑุฉ ุงูุณูุงุณู ุงููุตูุฉุ', options: ['string', 'text', 'strings'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ูุนุงูุฌุฉ ุงูุฏูุงุฆู (dictionaries) ูู Pythonุ', options: ['dict()', 'dictionary()', 'makeDict()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงููููุงุชุ', options: ['os', 'File', 'management'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุงูุชุนุฏุฏูุฉ ูู Pythonุ', options: ['multiple', 'multi', 'multiInherit'], correct: 2, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ูุณุฎ ุฌุฏูุฏุฉ ููุฑุฌุน ุงููุงุฆูุฉ ุฏูู ุงูุชุนุฏูู ุนูููุงุ', options: ['copy()', 'duplicate()', 'clone()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุฅูุดุงุก ูุชุนุฏูู ุงูุฏูุงู ูู Pythonุ', options: ['def', 'function()', 'create()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ุนูู ุงูููุงุฆูุ', options: ['math', 'sum()', 'listOperations'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุญุณุงุจ ุทูู ุงูุณูุณูุฉ ุงููุตูุฉ ูู Pythonุ', options: ['len()', 'count()', 'length()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชุฑุชูุจ ุนูุงุตุฑ ุงูููุงุฆู ูู Pythonุ', options: ['sort()', 'order()', 'arrange()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุงูุญููุงุช (loops) ูู Pythonุ', options: ['for', 'loop', 'iterate'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุงุฎุชุจุงุฑุงุช ุงูุดุฑุทูุฉ ูู Pythonุ', options: ['if', 'check()', 'test()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุฃุนุฏุงุฏ ุงูุนุดูุงุฆูุฉุ', options: ['random', 'rand()', 'numbers'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ูุตู ุฃู ุชุบููุฑ ููุน ุงูุจูุงูุงุช ูู Pythonุ', options: ['type()', 'convert()', 'cast()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ุงูุทุจุงุนุฉ ูู Pythonุ', options: ['print', 'display()', 'show()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชููุฑ ุทุฑููุง ูุฅุฏุงุฑุฉ ุงูุฃุฎุทุงุกุ', options: ['sys', 'errors', 'exception'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุญุณุงุจ ุงููุงุตูุฉ ุงูุนุงุฆูุฉ ูู Pythonุ', options: ['float()', 'decimal()', 'number()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงููุนุงูุฌุฉ ุงูุฑูุฒูุฉ (symbolic computation)ุ', options: ['sympy', 'math', 'symbolic'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูููุงุฑูุฉ ูู Pythonุ', options: ['==', 'comparison()', 'equal()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงุณุชูุฑุงุฏ (import) ููุชุจุฉ ูู Pythonุ', options: ['import', 'include()', 'use()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงููุญุต (validation)ุ', options: ['validate()', 'check()', 'test()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชุฎุฒูู ุงูุจูุงูุงุช ููููููุงุ', options: ['json', 'data', 'structure'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ุงูุชูุฑุงุฑ ูู Pythonุ', options: ['while', 'repeat', 'loop'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุนูููุฉ ุงูุทุฑุญ ูู Pythonุ', options: ['-', 'subtract()', 'minus()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุนูู ุงููุตูุตุ', options: ['re', 'regex', 'stringOps'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุชูุฑุงุฑุงุช ูู Pythonุ', options: ['loop()', 'iterate()', 'repeat()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุฅุฑุฌุงุน ุงูููู ูู ุงููุธุงุฆู ูู Pythonุ', options: ['return', 'send()', 'output()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงููุตูู ุฅูู ุงููููุงุชุ', options: ['os', 'fileOps', 'open()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุนุฑุถ ูุงุฆูุฉ ูุญุชููุงุช ุฏููู ุงููููุงุช ูู Pythonุ', options: ['os.listdir()', 'list()', 'contents()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุชุญููู ุงูุจูุงูุงุช ุฅูู ุณูุณูุฉ ูุตูุฉ ูู Pythonุ', options: ['str()', 'stringify()', 'text()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุนูููุงุช ูุฑุงุกุฉ ุงูุจูุงูุงุช ูู ุงูููุงุฆู ูู Pythonุ', options: ['read()', 'input()', 'extract()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุทุจุงุนุฉ ุจูุธุงู ุงูุฃุณุทุฑ ูู Pythonุ', options: ['\n', 'newline()', 'system()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชุนุฏูู ุงูููู ุฏุงุฎู ุงูููุงุฆู ูู Pythonุ', options: ['list[index]', 'modify()', 'change()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุชุงุฑูุฎ ูุงูููุชุ', options: ['datetime', 'timeOps', 'date()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุนูููุงุช ุงูุชูุฑุงุฑ ุงูุนูุณูุฉ ูู Pythonุ', options: ['reversed()', 'invert()', 'back()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุตูุบ ุงูุฑูุงุถูุฉุ', options: ['math', 'calculate()', 'numbers'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชุตุญูุญ ุงูุฃุฎุทุงุก ูู Pythonุ', options: ['try-except', 'catch()', 'debug()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุชุนุฏูู ุนูู ุงูููู ูู ุงูููุงุฆูุ', options: ['list.append()', 'add()', 'modify()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุฅูุดุงุก ุงูููุงููุณุ', options: ['dict', 'dictionary()', 'map()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุฌูุน ุจูู ุงูููู ูู ุงูููุงุฆูุ', options: ['sum()', '+', 'combine()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุชุญููู ุงููุตูุต ูู Pythonุ', options: ['re.findall()', 'match()', 'extract()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูููุงุฑูุฉ ุจูู ุงูุนูุงุตุฑ ูู ุงูููุงุฆูุ', options: ['==', 'compare()', 'isEqual()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุชูููุฐ ุงููุนุงููุงุช ุจูู ุงููุงุฆูุงุช ูู Pythonุ', options: ['class', 'object()', 'type()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงูุญุฐู (delete) ุงูุนูุงุตุฑ ูู ุงูููุงุฆูุ', options: ['list.remove()', 'delete()', 'clear()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุจุญุซ ูู ุงูููุงุฆูุ', options: ['in', 'find()', 'search()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุฅูุดุงุก ููุงุฆู ุฌุฏูุฏุฉ ูู ุงูููุงุฆู ุงููุฏููุฉุ', options: ['list.copy()', 'duplicate()', 'clone()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ Python ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุฌุฏุงููุ', options: ['pandas', 'dataframe()', 'table()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชูููุฐ ุงูุชุญููู ุฅูู ุนุฏุฏ ุตุญูุญ ูู Pythonุ', options: ['int()', 'convertToInt()', 'cast()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุญุณุงุจ ุงููููุฉ ุงููุทููุฉ ููุฃุนุฏุงุฏ ูู Pythonุ', options: ['abs()', 'absolute()', 'absValue()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'python').id },

            //c#

            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ููุชูุงุนู ูุน ุงููููุงุชุ', options: ['System.IO', 'FileSystem', 'Storage'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู C#ุ', options: ['new()', 'Create()', 'instantiate()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุซุงุจุชุฉ ูู C#ุ', options: ['readonly', 'const', 'static'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุน ุงูุฐู ููุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุบูุฑ ุงููุชุฒุงููุฉ ูู C#ุ', options: ['async', 'Thread', 'Task'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุดุจูุฉุ', options: ['System.Net', 'Network', 'Sockets'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุฑุงุซุฉ ูู C#ุ', options: ['extends', 'implements', 'class'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงูุงุณุชุฏุนุงุก ุงูุนูุณู (Callback) ูู C#ุ', options: ['Action', 'Delegate', 'Callback'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุฌูุฏ ุนูุตุฑ ูู ูุฌููุนุฉ ูู C#ุ', options: ['Contains()', 'find()', 'checkExist()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุงูุฑูุงุถูุฉุ', options: ['Math', 'Calc', 'Operations'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงูุณูุณูุฉ ุงููุตูุฉ ูุงุฑุบุฉ ูู C#ุ', options: ['isEmpty()', 'is_null()', 'checkEmpty()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุนุงูุฉ ูู C#ุ', options: ['public', 'protected', 'virtual'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ููุนูู ูุน ุงูุณูุงุณู ุงููุตูุฉุ', options: ['System.Text', 'StringManipulation', 'Regex'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุซุงุจุชุฉ ูู C#ุ', options: ['const', 'readonly', 'static'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุชุฃููู ุงูุจูุงูุงุช ุงููุชุฒุงููุฉุ', options: ['System.Threading', 'Sync', 'Mutex'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุงูุชุฑุงุถูุฉ ูู C#ุ', options: ['override', 'virtual', 'final'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ูุงุฆููู ูู C#ุ', options: ['Equals()', 'Compare()', 'diff()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ูุชูููุฐ ุฅุฏุงุฑุฉ ุงูุฃุฎุทุงุกุ', options: ['try/catch', 'try', 'errorHandler'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุบูุฑ ูุงุจูุฉ ููุชุบููุฑ ูู C#ุ', options: ['const', 'final', 'immutable'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ูุชูููุฐ ุงูุจุฑูุฌุฉ ุงููุชุฒุงููุฉุ', options: ['async/await', 'Threading', 'Tasks'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ูุฎุชููุฉ ูู C#ุ', options: ['sealed', 'final', 'static'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ููุนูู ูุน JSONุ', options: ['System.Text.Json', 'JSON', 'JsonManipulation'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุชูููุฐ ุนูููุฉ ุงูุถุฑุจ ูู C#ุ', options: ['Multiply()', 'Times()', 'multiply()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ููุชุจุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุงูุนูููุงุช ุงูุญุณุงุจูุฉุ', options: ['Math', 'System.Calculation', 'Operations'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุน ุงูุงูุชุฑุงุถู ูููุชุบูุฑ ูู C#ุ', options: ['int', 'float', 'string'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุงูุชุทุจููุงุช ูุชุนุฏุฏุฉ ุงูุฎููุทุ', options: ['System.Threading', 'Task', 'ThreadPool'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ุจุงุณุชุฎุฏุงู ุฏุงูุฉ ุงููุตูุน (Factory) ูู C#ุ', options: ['new', 'create', 'init'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุชูููุฐ ุงูุจุฑูุฌุฉ ุงูููุฌูุฉ ููุฃุญุฏุงุซุ', options: ['System.Event', 'Events', 'EventArgs'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ูุงุฌูุฉ ูู C#ุ', options: ['interface', 'implement', 'class'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุชุบูุฑ ุซุงุจุช ูู C#ุ', options: ['const', 'readonly', 'static'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุชุบูุฑ ูุงุญุฏ ูุญุชูู ุนูู ููู ูุชุนุฏุฏุฉ ูู C#ุ', options: ['in', 'contains()', 'exists()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงูุณูุงุณู ุงููุตูุฉุ', options: ['System.Text', 'String', 'Regex'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงูุฏูุงู ุงูุนุงูุฉ ูู C#ุ', options: ['public', 'protected', 'internal'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ููุชุนุงูู ูุน ุงูุชูููุชุ', options: ['System.DateTime', 'Timer', 'Clock'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ููุชุญูู ูู ููุน ุงูุจูุงูุงุช ูู C#ุ', options: ['typeof', 'isType()', 'checkType()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ููุชูุงุนู ูุน ููุงุนุฏ ุงูุจูุงูุงุชุ', options: ['System.Data', 'Database', 'DataAccess'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ูุชุบูุฑ ุฌุฏูุฏ ุจุฏูู ุชุญุฏูุฏ ููุนู ูู C#ุ', options: ['var', 'dynamic', 'unknown'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ููุชุจุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุชูููุฐ ุงูุงุชุตุงู ุงูุดุจููุ', options: ['System.Net', 'Network', 'Socket'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชุณุชุฎุฏู ูุชุฃููู ุงูุงุชุตุงูุงุช ุงููุชุฒุงููุฉุ', options: ['System.Threading', 'Mutex', 'Monitor'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงุณุชุฏุนุงุก ุฏุงูุฉ ุณุงุจูุฉ ุบูุฑ ููุชููุฉ ูู C#ุ', options: ['continue', 'delegate', 'lambda'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุฆุฉ ููุฌูุฉ ููุจูุงูุงุช ูู C#ุ', options: ['DataContract', 'class', 'entity'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงูุชูุงุนู ูุน ุงููููุงุชุ', options: ['System.IO', 'File', 'Storage'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ูุฎุชููุฉ ูู C#ุ', options: ['sealed', 'static', 'final'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุชูููุฐ ุฅุฏุงุฑุฉ ุงูุฃุฎุทุงุกุ', options: ['System.Exception', 'ErrorHandler', 'try/catch'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ููุชุจุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุชุฏูู ุงูุจูุงูุงุช ูู ุฎูุงู ุฃูุธูุฉ ุงูุชูุฑุงุฑ (loops)ุ', options: ['System.Loop', 'LoopControl', 'System.Collections'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุชุบูุฑ ุบูุฑ ุซุงุจุช ูู C#ุ', options: ['readonly', 'var', 'static'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ููุชุนุงูู ูุน ุงูุชุงุฑูุฎ ูุงูููุชุ', options: ['System.DateTime', 'DateTime', 'Time'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุตูููุฉ ูู C#ุ', options: ['Array.Create()', 'new[]', 'MakeArray()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุฏูุงู ุงูุชููุฆุฉ (Initializer) ูู C#ุ', options: ['init', 'initialize', 'set'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุฃุญุฏุงุซุ', options: ['System.Events', 'EventHandler', 'EventArgs'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ููุชุนุงูู ูุน ุงููุฏุฎูุงุช/ุงููุฎุฑุฌุงุช (I/O)ุ', options: ['System.IO', 'File', 'Stream'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงุชุตุงู ุจุดุจูุฉ ูู C#ุ', options: ['NetworkConnection()', 'connect()', 'Socket()'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุฅุฏุงุฑุฉ ุงููุฆุงุช ุงูุนุงูุฉุ', options: ['System.Generic', 'Generics', 'Collection'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงูููู ูู C#ุ', options: ['HashSet', 'Array', 'List'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุนูููุฉ ุงูุฌูุน ูู C#ุ', options: ['Add()', 'Sum()', 'plus()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุฅุฏุงุฑุฉ ุงูุชูููุชุ', options: ['System.Time', 'TimeManagement', 'System.Timers'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก ูู C#ุ', options: ['try/catch', 'errorHandle()', 'exception()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุฃุนุฏุงุฏ ุงูุตุญูุญุฉุ', options: ['System.Integer', 'int', 'Integer'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑู ูุชูุธูู ุงูููู ุงููุงุตูุฉุ', options: ['System.Double', 'float', 'Decimal'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชูููุฐ ุงุชุตุงู ูุงุนุฏุฉ ุจูุงูุงุช ูู C#ุ', options: ['DatabaseConnection()', 'connectDB()', 'SqlConnection()'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุฅูุดุงุก ูุงุฌูุงุช ุงููุณุชุฎุฏู ุงูุฑุณูููุฉุ', options: ['System.UI', 'WinForms', 'GUI'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุฃุญุฏุงุซ ุงูุนุงูุฉุ', options: ['System.EventArgs', 'Event', 'event'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ูุฆุฉ ุฌุฏูุฏุฉ ูู C#ุ', options: ['new()', 'Create()', 'Make()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงูุทุจูุงุช ุงููุฑุนูุฉ ูู C#ุ', options: ['inheritance', 'subclass', 'extends'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุง ูุฅุฏุงุฑุฉ ุงููุชุบูุฑุงุช ุงูุนุงูุฉุ', options: ['System.Public', 'Variables', 'public'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุณูุณูุฉ ุฌุฏูุฏุฉ ูู C#ุ', options: ['String()', 'newString()', 'CreateString()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชููุฑ ุทุฑููุฉ ูุฅูุดุงุก ุฃูุธูุฉ ุงูุชูุฑุงุฑ (loops)ุ', options: ['System.Loop', 'Loops', 'Iteration'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C# ุงูุชู ุชูุณุชุฎุฏู ูุฅุฏุงุฑุฉ ุงูุชูููุชุ', options: ['System.Time', 'Timing', 'Timers'], correct: 2, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ูุตูููุฉ ุฌุฏูุฏุฉ ูู C#ุ', options: ['CreateArray()', 'newArray()', 'Make()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุฏูุงู ุงูุฅููุงู (Completion) ูู C#ุ', options: ['complete', 'end', 'done'], correct: 1, topicId: createdTopics.find((t) => t.name === 'csharp').id },

            //cpp
            { question: 'ูุง ูู ุทุฑููุฉ ุชูููุฐ ุงูุงุณุชุฏุนุงุก ุงูุนูุณู (Callback) ูู C++ุ', options: ['std::function', 'using keyword', 'extern "C"'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุฑุงุซุฉ ูุชุนุฏุฏุฉ ูู C++ุ', options: ['interface', 'public', 'virtual'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชุณุชุฎุฏู ููุชูุงุนุจ ุจุงููุจุถุงุช (signals and slots)?', options: ['Qt', 'Boost', 'SDL'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ููุจุญุซ ุนู ุฃูุจุฑ ุนุฏุฏ ูุดุชุฑู ููุณูู ูู C++ุ', options: ['gcd()', 'lcm()', 'max()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุฃููุงุนูุง ูุฏูุฌุฉ ูุซู `optional`, `variant`, `any`ุ', options: ['<optional>', '<variant>', '<any>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุณูุณูุฉ ุงููุตูุต ุฎุงููุฉ ูู C++ุ', options: ['empty()', 'is_empty()', 'checkEmpty()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุน ุงูุฐู ูุณูุญ ุจุชุฎุฒูู ุงูุจูุงูุงุช ุจุฏูู ุฅุนุงุฏุฉ ุชุฎุตูุต ูู C++ุ', options: ['std::vector', 'std::deque', 'std::array'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชุญุฏูุฏ ุงูููู ุงููุชูุฑุฑุฉ ูู ูุฌููุนุฉ ูู C++ุ', options: ['std::unique', 'std::duplicate', 'std::repeated'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุฃููุงุน ูุฑุนูุฉ ูุซู `hash_map`, `hash_set`ุ', options: ['<map>', '<unordered_map>', '<set>'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุชุบูุฑ ุซุงุจุช ูุคูุช ูู C++ุ', options: ['constexpr', 'final', 'static'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุงูุชุฑุงุถูุฉ ูู C++ุ', options: ['virtual', 'override', 'final'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชุณุชุฎุฏู ูุชูููุฐ ุฃุฏูุงุช ุงูุจุฑูุฌุฉ ุงููุชูุฏูุฉ ูุซู MPLุ', options: ['Boost', 'Qt', 'SDL'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุชูููุฐ ุนุฑุถ ุงูุดุฑุงุฆุญ (slideshow) ูู C++ุ', options: ['slideshow()', 'display()', 'show()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุทุฑููุฉ ูุชุฃููู ุงูุจูุงูุงุช ุงููุชุฒุงููุฉุ', options: ['<mutex>', '<thread>', '<condition_variable>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุทุฑููุฉ ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก ุบูุฑ ุงููุชููุน ูู C++ุ', options: ['try/catch', 'assert()', 'logError()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุตุญุฉ ุงููุคุดุฑ (pointer) ูู C++ุ', options: ['is_valid()', 'is_pointer()', 'pointer_test()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุทุฑู ุงูุชุนุงูู ูุน ุงูุนุงุฏุงุช ุงูุฑูุงุถูุฉุ', options: ['<regex>', '<string>', '<algorithm>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุณุฎุฉ ุซุงุจุชุฉ ูู ูุงุฆู ูู C++ุ', options: ['const_cast', 'copy', 'const'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชุณุชุฎุฏู ูุชูููุฐ ุงูุชุญููู ุงูุชููุงุฆู ููุดูุฑุฉุ', options: ['Clang', 'gcc', 'MSVC'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชุณุชุฎุฏู ูุฅุถุงูุฉ ูุณุงูุฉ ุจูู ุงููููุงุช ูู C++ุ', options: ['space()', 'split()', 'add_space()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงูุฏูุงู ุงูุนุงูุฉ ูุงููุชุฎุตุตุฉ ูู C++ุ', options: ['public', 'template', 'virtual'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุฃููุงุน ุงูุจูุงูุงุช ูุซู `queue`, `stack`, `priority_queue`ุ', options: ['<queue>', '<stack>', '<priority_queue>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุฎุงุตุฉ ุจุงูุตู ูู C++ ุชุณุชุฎุฏู ููุฅูุญุงูุ', options: ['append()', 'push_back()', 'add()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุน ุงูุฐู ูููู ูู ุฎูุงูู ุชูุฑูุฑ ุงูุจูุงูุงุช ุฅูู ุฏุงูุฉ ูุฅุนุงุฏุชูุง ุฃูุถูุง ูู C++ุ', options: ['reference', 'pointer', 'const pointer'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ููุจุฑูุฌุฉ ุงูุฑุณูููุฉุ', options: ['SFML', 'Qt', 'Boost'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุชุบูุฑ ูุง ูููู ุชุบููุฑู ูู C++ุ', options: ['const', 'readonly', 'immutable'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงููุงุฆูุฉ ูุงุฑุบุฉ ูู C++ุ', options: ['isEmpty()', 'empty()', 'size() == 0'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงูุงุชุตุงู ูู C++ุ', options: ['std::function', 'callback()', 'connect()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุฅูุดุงุก ูุงุฆูุฉ ูุชุฒุงููุฉ ูู C++ุ', options: ['std::list', 'std::deque', 'std::queue'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ูููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุฑุงุซุฉ ูู C++ุ', options: ['inherit', 'extends', 'virtual'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ูููุนุงูุฌุฉ ุงููุชุฒุงููุฉุ', options: ['<thread>', '<mutex>', '<condition_variable>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅุถุงูุฉ ุนูุตุฑ ูู ุงูุตู ุงูุฎููู ููุตูููุฉ ูู C++ุ', options: ['push_back()', 'add()', 'append()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููุฑู ุจูู `new` ู `malloc` ูู C++ุ', options: ['`new` ูุชุนุงูู ูุน ุงูููุงุฑุฏ ุชููุงุฆููุงุ `malloc` ูุง.', '`new` ูุญุชุงุฌ ุฅูู `delete`, `malloc` ูุญุชุงุฌ ุฅูู `free`.', 'ูุง ููุฌุฏ ูุฑู.'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูุชุญุฏูุฏ ุญุฌู ุงููุตูููุฉ ูู C++ุ', options: ['new', 'malloc', 'calloc'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุนุงูุฉ ูู C++ุ', options: ['public', 'private', 'protected'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ููุนูุง ุฌุบุฑุงูููุงุ', options: ['<tuple>', '<vector>', '<map>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุทุฑููุฉ ุงูุชุนุงูู ูุน ููุฒุฉ ูู C++ุ', options: ['try/catch', 'if/else', 'goto'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงููุงุตูุฉ ููุฌูุฏุฉ ูู C++ุ', options: ['find()', 'contains()', 'indexOf()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชุณุชุฎุฏู ุนุงุฏุฉ ูุฅูุดุงุก ุชุทุจููุงุช ุงูุฌูุงู ูู C++ุ', options: ['Qt', 'SFML', 'SDL'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชุญุฏูุฏ ุงูุญุฏ ุงูุฃูุตู ููุนุฏุฏ ูู C++ุ', options: ['max()', 'maximum()', 'find_max()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุตุญุฉ ุนุฏุฏ ุตุญูุญุ', options: ['isInteger()', 'is_numeric()', 'isdigit()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงูููุฒุฉ ูู C++ุ', options: ['goto', 'break', 'continue'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงูุชู ุชููุฑ ุชุฎุตูุต ุงูุฐุงูุฑุฉุ', options: ['<new>', '<memory>', '<malloc>'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงูุฐุงูุฑุฉ ูุฎุตุตุฉ ูู C++ุ', options: ['is_allocated()', 'check_memory()', 'memory_test()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุฅูุดุงุก ูุงุฆู ูู C++ุ', options: ['new', 'create()', 'instantiate()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู `std::sort` ูู C++ุ', options: ['sort()', 'array_sort()', 'std::sort'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุชุบูุฑ ุซุงุจุช ูู C++ุ', options: ['static', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุฏุงูุฉ ูู C++ุ', options: ['function', 'void', 'int'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ููู ูุชู ุชุนุฑูู ูุชุบูุฑ ุซุงุจุช ูู C++ุ', options: ['const int x = 5;', 'int const x = 5;', 'const int const x = 5;'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงููุคุดุฑ ูู C++ุ', options: ['*', '&', '->'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ููุชุนุงูู ูุน ุงููุตูุตุ', options: ['iostream', 'cstring', 'cstdio'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููุธููุฉ ุงูุฎุงุตุฉ ุจุงูุตู ูู C++ ุชุณุชุฎุฏู ูููุณุฎุ', options: ['copy()', 'clone()', 'Constructor'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงูุชุดุงู ุญุฌู ูุตูููุฉ ูู C++ุ', options: ['sizeof()', 'length()', 'count()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ูููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุจูุง ุนูุฏุฉ ูู C++ุ', options: ['void', 'int', 'return'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ูุฅุฏุงุฑุฉ ุงูุฐุงูุฑุฉ ุงูุฏููุงููููุฉุ', options: ['<memory>', '<iostream>', '<vector>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุฅุฑุฌุงุน ุงููุงุฆู ูู ุฏุงูุฉ ูู C++ุ', options: ['return Object', 'Object return()', 'Object get()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุชุนุฏุฏ ุงูุฃุดูุงู ูู C++ุ', options: ['override', 'virtual', 'new'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชุจุงุฏู ูููุชูู ูู C++ุ', options: ['swap()', 'exchange()', 'move()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุฅุฐุง ูุงู ุงููุต ูุงุฑุบ ูู C++ุ', options: ['isEmpty()', 'empty()', 'null()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ูุฅุฌุฑุงุก ุงูููุงุฆู ุงููุฑุชุจุทุฉุ', options: ['<list>', '<deque>', '<vector>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุชุณููุท ุงูุถูุก ุนูู ุงููุฑูู ุจูู ูุชุบูุฑูู ูู C++ุ', options: ['==', '!=', '<=>'], correct: 2, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ูู C++ุ', options: ['SFML', 'SDL', 'OpenGL'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุซุงุจุชุฉ ูู C++ุ', options: ['static', 'const', 'final'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุบุงุก ุชุฎุตูุต ุฐุงูุฑุฉ ูู C++ุ', options: ['free()', 'delete()', 'clear()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงูุชุจุฏูู ูู C++ุ', options: ['switch', 'if', 'case'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ุฏุงูุฉ ุจูุง ุนูุฏุฉ ูู C++ุ', options: ['void', 'return', 'int'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงููููุฉ ููุฌูุฏุฉ ูู ูุฌููุนุฉ ูู C++ุ', options: ['find()', 'contains()', 'exists()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุชุบูุฑ ุงูุซุงุจุช ูู C++ุ', options: ['const', 'static', 'readonly'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ููุณุฎ ุงูุจูุงูุงุช ูู C++ุ', options: ['copy()', 'memcpy()', 'clone()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ูููุนุงูุฌุฉ ุงููุซููุฉุ', options: ['<thread>', '<mutex>', '<condition_variable>'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชุญููู ุนุฏุฏ ุฅูู ุณูุณูุฉ ูู C++ุ', options: ['to_string()', 'str()', 'sprintf()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ูุคุดุฑ ุฅูู ุฏุงูุฉ ูู C++ุ', options: ['&', '*', '->'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูููุงุณูุฉ C++ ุงููุณุชุฎุฏูุฉ ููุชุนุงูู ูุน ุงูุชูุงุฑูุฎุ', options: ['<ctime>', '<chrono>', '<date>'], correct: 1, topicId: createdTopics.find((t) => t.name === 'cpp').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูููุชุงุญ ูุงุณุชุฎุฏุงู ุงููุฆุฉ `std::vector` ูู C++ุ', options: ['vector', 'array', 'list'], correct: 0, topicId: createdTopics.find((t) => t.name === 'cpp').id },

            //js

            { question: 'ูุง ูู ุงูุฃุณููุจ ุงููุณุชุฎุฏู ูุฅูุดุงุก ูุณุฎุฉ ุนูููุฉ ูู ูุงุฆู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['Object.assign()', 'JSON.parse()', 'structuredClone()'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ูุธููุฉ ุงูุฏุงูุฉ `map()` ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['ุชุทุจูู ูุธููุฉ ุนูู ูู ุนูุตุฑ ูู ูุตูููุฉ', 'ุฅุฑุฌุงุน ูุตูููุฉ ุฌุฏูุฏุฉ ุฏูู ุชุนุฏูู ุงูุฃุตู', 'ุฅูุฌุงุฏ ุฃูู ุนูุตุฑ ูุทุงุจู ุงูุดุฑุท'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ูููุฉ ุงูููุชุงุญ ูุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['new', 'create()', 'init()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุฃูุซุฑ ุดููุนูุง ูุงุณุชุฎุฏุงููุง ูุฅุฌุฑุงุก ุทูุจุงุช AJAX ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['Axios', 'Fetch', 'jQuery'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุญููุฉ (loop) ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['for', 'while', 'do...while'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุฅุฐุง ูุงู ุงููุงุฆู ุฎุงูู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['isEmpty()', 'Object.keys()', 'length === 0'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุชูููุฐ ุงูุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุฅูุบุงุก ุงูุชูุดูุท ุงูุชููุงุฆู ูููุชุบูุฑุงุช ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['null', 'undefined', '0'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุงููุฆุงุช ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['class', 'function', 'new'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุนุฑุถ ุฌููุน ุงูููุงุชูุญ ูู ูุงุฆู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['Object.keys()', 'Object.values()', 'Object.entries()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุดููุนูุง ูุงุณุชุฎุฏุงููุง ูุจูุงุก ูุงุฌูุงุช ุงููุณุชุฎุฏู ุงูุชูุงุนููุฉุ', options: ['React', 'Vue.js', 'Angular'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุฎุชุจุงุฑ ุชุทุงุจู ุงูููู ุจูู ูุชุบูุฑูู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['===', '==', 'equals()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู XML ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['jQuery', 'XMLParser', 'DOMParser'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุฅููุงู ุงูุฏุงูุฉ ุงููุคูุชุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['clearTimeout()', 'clearInterval()', 'cancelAnimationFrame()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงููุณุชุฎุฏูุฉ ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงููุฆุฉ `Promise` ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['then()', 'catch()', 'all()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู ุงูุชูุงุฑูุฎ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['moment.js', 'date-fns', 'lodash'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช ุงููุณุชููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['var', 'let', 'const'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชุญููู ุงููุต ุฅูู ุฑูู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['parseInt()', 'toNumber()', 'convert()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงููุตูุต ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['lodash', 'jQuery', 'React'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุชุทุงุจู ุงูุฃููุงุท ุงููุตูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['match()', 'test()', 'search()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู JSON ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['===', 'compare()', 'equal()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุฅูุดุงุก ูุฆุฉ ุฌุฏูุฏุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['class', 'function', 'new'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุชุญุฏูุฏ ูุทุงู ุงูุฑุคูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['let', 'var', 'const'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงููุตูุต ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['lodash', 'jQuery', 'React'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุชุทุงุจู ุงูุฃููุงุท ุงููุตูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['match()', 'test()', 'search()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู JSON ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['===', 'compare()', 'equal()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุบูุฑ ูุงุจูุฉ ููุชุบููุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉุ', options: ['Chart.js', 'D3.js', 'jQuery'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุชุญููู ุงูุชุงุฑูุฎ ุฅูู ูุต ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['toString()', 'date.toDateString()', 'JSON.stringify()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุฃูุซุฑ ุดููุนูุง ูุฅุฌุฑุงุก ุนูููุงุช ุงููุนุงูุฌุฉ ุงููุตูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['lodash', 'jQuery', 'React'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุฎุชุจุงุฑ ูุง ุฅุฐุง ูุงูุช ุงูุณูุณูุฉ ุชุชุทุงุจู ูุน ููุท ูุนููุ', options: ['match()', 'test()', 'search()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู JSON ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['===', 'compare()', 'equal()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุจูุฆุฉ ุงูุชุทููุฑูุฉ ุงูุฑุณููุฉ ูุจุฑูุฌุฉ ุฌุงูุง ุณูุฑูุจุชุ', options: ['Visual Studio Code', 'Eclipse', 'NetBeans'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ูุชุบูุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['let', 'var', 'const'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุน ุงูุงูุชุฑุงุถู ูููุชุบูุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['object', 'string', 'number'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุทุจุงุนุฉ ุงููุต ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['print()', 'console.log()', 'echo()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุน ุงูุฐู ููุณุชุฎุฏู ููุชุนุจูุฑ ุนู ูุฌููุนุฉ ุบูุฑ ูุญุฏูุฏุฉ ูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['array', 'set', 'object'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุฅูุดุงุก ูุตูููุฉ ุฌุฏูุฏุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['new()', 'array()', 'make()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุงููุชุบูุฑุงุช ุงูุนุงูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['public', 'private', 'global'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุชุณุงูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['==', 'equals()', 'is'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ููุชุนุงูู ูุน ุงูุฑุณูู ุงูุจูุงููุฉุ', options: ['D3.js', 'jQuery', 'React'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ููุชูุงุนู ูุน ุงูุฎูุงุฏูุ', options: ['Axios', 'Fetch', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุฌูุฏ ุนูุตุฑ ูู ูุตูููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['includes()', 'find()', 'indexOf()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู JSONุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'def', 'make()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุชุตููู ุตูุญุงุช ุงูููุจ ุงูุฏููุงููููุฉุ', options: ['Angular', 'Vue.js', 'React'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ูุงุฆููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['diff()', 'compare()', '==='], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุชูููุฐ ุนูููุงุช ุฑูุงุถูุฉ ูุซู ุงูุฌูุน ูุงูุทุฑุญ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['Math()', 'calculate()', 'compute()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุดููุนูุง ููุชุนุงูู ูุน ุงูุชูุงุนูุงุช ุจูู ุงูุนููู ูุงูุฎุงุฏูุ', options: ['Axios', 'Fetch', 'jQuery'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุทุฑููุฉ ุงููุตูู ุฅูู ุนูุงุตุฑ ุงููููุฐุฌ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['getElementById()', 'find()', 'querySelector()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุจูุงุก ูุงุฌูุงุช ุงููุณุชุฎุฏู ุงูุชูุงุนููุฉุ', options: ['React', 'Vue.js', 'Angular'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุบูุฑ ูุชุบูุฑุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ููุชุญูู ูู ููุน ุงูุจูุงูุงุช ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['typeof', 'isType()', 'checkType()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูุธูู ุงูุณูุงุณู ุงููุตูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['lodash', 'jQuery', 'React'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุงูุฑููุฒ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['symbols', 'enum', 'keys'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุงุณุชุฎุฏุงู ุงููุฆุงุช ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['class', 'extends', 'constructor'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ูุฌูุฏ ุงูุนูุตุฑ ูู ูุตูููุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['indexOf()', 'includes()', 'find()'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉ ุงูุชูุงุนููุฉุ', options: ['Chart.js', 'D3.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุชุญููู ุงููุตูุต ุงููุจูุฑุฉ ุฅูู ุตูุบ ุฃุตุบุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['toLowerCase()', 'toUpperCase()', 'trim()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุฅูุดุงุก ุงูุชุทุจููุงุช ูุชุนุฏุฏุฉ ุงูุฎููุทุ', options: ['Web Workers', 'Axios', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['new', 'make()', 'create'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุฅุฌุฑุงุก ุงูุนูููุงุช ุงูุญุณุงุจูุฉ ุงูุฌุจุฑูุฉุ', options: ['math.js', 'compute()', 'calculate()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ูุงุฎุชุจุงุฑ ุงููุฑูู ุจูู ุงูููู ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['===', 'compare()', 'equal()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุชุญุฏูุฏ ูุฌุงู ุงูุฑุคูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['let', 'var', 'const'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุชูููุฐ ุงูุชูุงุนูุงุช ุงูุฑุณูููุฉุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงููุณุชุฎุฏูุฉ ูุชุญููู ุงููุตูุต ุงููุจูุฑุฉ ุฅูู ุตูุบ ุฃุตุบุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['toLowerCase()', 'toUpperCase()', 'trim()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุจูุงุก ุตูุญุงุช ุงูููุจ ุงูุฏููุงููููุฉุ', options: ['Angular', 'Vue.js', 'React'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูููุชุจุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู JSON ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุซุงุจุชุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู JSON ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.read()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุจูุงุก ุชุทุจููุงุช ุงูููุงุชู ุงูุฐููุฉุ', options: ['React Native', 'PhoneGap', 'Flutter'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุชุญููู ุงูุจูุงูุงุชุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุบูุฑ ูุงุจูุฉ ููุชุบููุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุทุฑููุฉ ูุงุณุชุฎุฏุงู ุฏุงูุฉ ุงููุทุงุจูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['match()', 'test()', 'search()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉุ', options: ['Chart.js', 'D3.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ูุชุบูุฑ ุบูุฑ ูุงุจู ููุชุบููุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['const', 'readonly', 'immutable'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุฃูุซุฑ ุงุณุชุฎุฏุงููุง ูุจูุงุก ูุงุฌูุงุช ุงููุณุชุฎุฏู ุงูุชูุงุนููุฉุ', options: ['React', 'Vue.js', 'Angular'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ูุชูููุฐ ุนูููุงุช ุฑูุงุถูุฉ ูุซู ุงูุฌูุน ูุงูุทุฑุญ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['Math()', 'calculate()', 'compute()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุชุญุฏูุฏ ูุทุงู ุงูุฑุคูุฉ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['let', 'var', 'const'], correct: 2, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุชุญููู ุงููุตูุตุ', options: ['NLTK', 'Lodash', 'jQuery'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุฅูุดุงุก ุงูุฑุณูู ุงูุจูุงููุฉุ', options: ['D3.js', 'Chart.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงูุฏุงูุฉ ุงูุชู ุชูุณุชุฎุฏู ููุชุญูู ูู ููุน ุงูุจูุงูุงุช ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['typeof', 'isType()', 'checkType()'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ุงููููุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุฏุงูุฉ ุบูุฑ ูุงุจูุฉ ููุชุบููุฑ ูู ุฌุงูุง ุณูุฑูุจุชุ', options: ['function', 'const', 'readonly'], correct: 1, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงูุชู ุชูุณุชุฎุฏู ูุจูุงุก ุชุทุจููุงุช ุงูููุงุชู ุงูุฐููุฉุ', options: ['React Native', 'PhoneGap', 'Flutter'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id },
            { question: 'ูุง ูู ููุชุจุฉ ุฌุงูุง ุณูุฑูุจุช ุงููุณุชุฎุฏูุฉ ูุจูุงุก ุงูุฑุณูู ุงูุจูุงููุฉุ', options: ['Chart.js', 'D3.js', 'jQuery'], correct: 0, topicId: createdTopics.find((t) => t.name === 'javascript').id }
        ];

        for (const question of questions)
        {
            await Question.findOrCreate({
                where: { question: question.question },
                defaults: question,
            });

        }
        console.log('โ Questions seeded.');

        console.log('๐ฑ Seeding completed successfully.');
    } catch (error)
    {
        console.error('โ Seeding error:', error);
    } finally
    {

    }
}

module.exports = seedDatabase;
